{"mappings":";;;;;;;;;;;;;AAAA;;AAQA,MAAM,8BAAQ,GAAG,CAAC,YAAE,QAAQ,CAAA,cAAE,UAAU,GAAG,KAAK,gBAAE,WAAW,GAAG,IAAI,GAAU,GAAkB;IAC9F,IAAI,CAAC,QAAQ,EACX,qBAAO,iGAAK,CAAC;IAEf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EACnD,qBAAO;kBAAG,QAAQ;qBAAI,CAAC;IAEzB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EACvB,qBAAO;kBAAG;YAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;YAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SAAC;qBAAI,CAAC;IAElG,MAAM,mBAAmB,GAAG,QAAQ,CACjC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAC7B,MAAM,CAAC,CAAC,QAA2B,EAAE,OAAO,GAAK;QAChD,OAAO;eAAI,QAAQ;YAAE,OAAO;YAAE,IAAI;SAAC,CAAC;KACrC,EAAE,EAAE,CAAC,AAAC;IACT,qBACE;kBACG;eACI,mBAAmB;YACtB,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7B,WAAW,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;YACpD,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SAC9B;qBACA,CACH;CACH,AAAC;IAEF,wCAAwB,GAAT,8BAAQ","sources":["src/index.tsx"],"sourcesContent":["import React from 'react';\n\ninterface IProps {\n  children?: React.ReactNode;\n  conjuction?: string;\n  oxfordComma?: boolean;\n}\n\nconst ReactAnd = ({ children, conjuction = 'and', oxfordComma = true }: IProps): JSX.Element => {\n  if (!children) {\n    return <></>;\n  }\n  if (!Array.isArray(children) || children.length === 1) {\n    return <>{children}</>;\n  }\n  if (children.length === 2) {\n    return <>{[children[children.length - 2], ` ${conjuction} `, children[children.length - 1]]}</>;\n  }\n  const commaSeparatedItems = children\n    .slice(0, children.length - 2)\n    .reduce((previous: React.ReactNode[], current) => {\n      return [...previous, current, ', '];\n    }, []);\n  return (\n    <>\n      {[\n        ...commaSeparatedItems,\n        children[children.length - 2],\n        oxfordComma ? `, ${conjuction} ` : ` ${conjuction} `,\n        children[children.length - 1],\n      ]}\n    </>\n  );\n};\n\nexport default ReactAnd;\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../"}